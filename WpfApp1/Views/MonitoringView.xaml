<UserControl  x:Class="WpfApp1.Views.MonitoringView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:WAP="clr-namespace:WpfApp1"
              xmlns:smtx="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
              xmlns:view="clr-namespace:WpfApp1.ViewModels"
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
           xmlns:local="clr-namespace:WpfApp1.Views"
              xmlns:local1="clr-namespace:WpfApp1.TransitionsFile"
              xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
              d:DataContext="{d:DesignInstance {x:Type WAP:MainWindowView}}"        
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
               xmlns:cal="http://www.caliburnproject.org"
       xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
              xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
              xmlns:materialDesign1="http://schemas.microsoft.com/netfx/2009/xaml/presentation">
    <UserControl.DataContext>


        <view:MonitoringViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
       
        <SineEase x:Key="FlipEase" EasingMode="EaseInOut" />

        <Style TargetType="{x:Type wpf:Flipper}">
            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpf:Flipper}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="Border">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FlipStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Unflipped" To="Flipped">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.4" Storyboard.TargetProperty="RotationY" Storyboard.TargetName="Plane3D">
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.0" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="-90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4" EasingFunction="{StaticResource FlipEase}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Flipped" To="Unflipped">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.4" Storyboard.TargetProperty="RotationY" Storyboard.TargetName="Plane3D">
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.0" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="-90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4" EasingFunction="{StaticResource FlipEase}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Unflipped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Flipped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <wpf:Plane3D x:Name="Plane3D" RotationY="0" ZFactor="2.055">
                                <Grid>
                                    <ContentPresenter 
                                    x:Name="FrontContentPresenter"                    
                                    Margin="{TemplateBinding Padding}"                            
                                    Content="{TemplateBinding FrontContent}" 
                                    ContentTemplate="{TemplateBinding FrontContentTemplate}" 
                                    ContentTemplateSelector="{TemplateBinding FrontContentTemplateSelector}" 
                                    ContentStringFormat="{TemplateBinding FrontContentStringFormat}"
                                    RenderTransformOrigin=".5,.5" />
                                    <ContentPresenter 
                                    x:Name="BackContentPresenter"                    
                                    Visibility="Hidden"
                                    Margin="{TemplateBinding Padding}"                            
                                    Content="{TemplateBinding BackContent}" 
                                    ContentTemplate="{TemplateBinding BackContentTemplate}" 
                                    ContentTemplateSelector="{TemplateBinding BackContentTemplateSelector}" 
                                    ContentStringFormat="{TemplateBinding BackContentStringFormat}"
                                    RenderTransformOrigin=".5,.5" />
                                </Grid>
                            </wpf:Plane3D>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MaterialDesignCardFlipper" TargetType="{x:Type wpf:Flipper}" BasedOn="{StaticResource {x:Type wpf:Flipper}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type wpf:Flipper}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="Border">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FlipStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="Unflipped" To="Flipped">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.4" Storyboard.TargetProperty="RotationY" Storyboard.TargetName="PART_Plane3D">
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.0" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="-90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4" EasingFunction="{StaticResource FlipEase}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Flipped" To="Unflipped">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.4" Storyboard.TargetProperty="RotationY" Storyboard.TargetName="PART_Plane3D">
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.0" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="-90" KeyTime="0:0:0.2" EasingFunction="{StaticResource FlipEase}" />
                                                    <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.4" EasingFunction="{StaticResource FlipEase}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                    <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0.2" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>

                                    <VisualState x:Name="Unflipped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Flipped">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="BackContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames  Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FrontContentPresenter">
                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <wpf:Plane3D x:Name="PART_Plane3D" RotationY="0" ZFactor="2.055">
                                <wpf:Card>
                                    <Grid>
                                        <ContentPresenter x:Name="FrontContentPresenter"                    
                                                      Margin="{TemplateBinding Padding}"                            
                                                      Content="{TemplateBinding FrontContent}" 
                                                      ContentTemplate="{TemplateBinding FrontContentTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding FrontContentTemplateSelector}" 
                                                      ContentStringFormat="{TemplateBinding FrontContentStringFormat}"
                                                      RenderTransformOrigin=".5,.5" />
                                        <ContentPresenter x:Name="BackContentPresenter"                    
                                                      Visibility="Collapsed"
                                                      Margin="{TemplateBinding Padding}"                            
                                                      Content="{TemplateBinding BackContent}" 
                                                      ContentTemplate="{TemplateBinding BackContentTemplate}" 
                                                      ContentTemplateSelector="{TemplateBinding BackContentTemplateSelector}" 
                                                      ContentStringFormat="{TemplateBinding BackContentStringFormat}"
                                                      RenderTransformOrigin=".5,.5" />
                                    </Grid>
                                </wpf:Card>
                            </wpf:Plane3D>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <!--<RowDefinition Height="Auto" />
            <RowDefinition Height="256" />-->
        </Grid.RowDefinitions>
        <TextBlock >Transitions Demo</TextBlock>


        <!-- the transitioner will manage your transitions. notice how SelectedIndex is set to zero: the first slide (instead of the default of -1) -->
        <materialDesign:Transitioner SelectedIndex="0" AutoApplyTransitionOrigins="True" Grid.Row="0" Margin="0,0,0,0" HorizontalAlignment="Stretch">
            <materialDesign:Transitioner.InputBindings>
                <KeyBinding Key="Left" Command="{x:Static materialDesign:Transitioner.MovePreviousCommand}" />
                <KeyBinding Key="Right" Command="{x:Static materialDesign:Transitioner.MoveNextCommand}" />
            </materialDesign:Transitioner.InputBindings>

            <!-- you can use a slide for each page, let's add a touch of fade for our first page  -->
            <materialDesign:TransitionerSlide OpeningEffect="{materialDesign:TransitionEffect FadeIn}">
                <local1:Slide1_Intro />
            </materialDesign:TransitionerSlide>

            <!-- but you can use bare xaml too -->
            <local1:Slide2_Intro />

            <!-- you can control (and create your own) wipes -->
            <materialDesign:TransitionerSlide>
                <materialDesign:TransitionerSlide.BackwardWipe>
                    <materialDesign:CircleWipe />
                </materialDesign:TransitionerSlide.BackwardWipe>
                <materialDesign:TransitionerSlide.ForwardWipe>
                    <materialDesign:SlideWipe Direction="Right" />
                </materialDesign:TransitionerSlide.ForwardWipe>
                <local1:Slide3_Intro />
            </materialDesign:TransitionerSlide>

            <!-- now we are going to slide this in by combining some extra effects.  the inner content slides in, so we'll set the outer background and clip, to keep things nice -->
            <materialDesign:TransitionerSlide Background="{DynamicResource MaterialDesignDarkBackground}"
                                              Foreground="{DynamicResource MaterialDesignDarkForeground}"
                                              ClipToBounds="True">
                <materialDesign:TransitionerSlide.OpeningEffects>
                    <materialDesign:TransitionEffect Kind="SlideInFromLeft" Duration="0:0:0.8" />
                    <materialDesign:TransitionEffect Kind="SlideInFromBottom" Duration="0:0:0.8" OffsetTime="0:0:0.15" />
                </materialDesign:TransitionerSlide.OpeningEffects>
                <local1:Slide4_CombineTransitions />
            </materialDesign:TransitionerSlide>

            <local1:Slide5_TransitioningContent />

            <local1:Slide6_Origins />

            <local1:Slide7_MVVM />

        </materialDesign:Transitioner>
        <!--<Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border
      Background="{DynamicResource MaterialDesignDivider}"
      Height="4"
      HorizontalAlignment="Stretch"
      SnapsToDevicePixels="True"/>
       
        <Controls:MetroAnimatedSingleRowTabControl x:Name="MetroAnimatedSingleRowTabControl" Height="150"
                 Controls:TabControlHelper.Underlined="SelectedTabItem" TabStripPlacement="Top"      
                                                  >
            <TabItem Header="these tabs">
                <TextBlock FontSize="30" Text="first content" />
            </TabItem>
            <Controls:MetroTabItem Header="appear only on a single line">
                <TextBlock FontSize="30" Text="second one" />
            </Controls:MetroTabItem>
            <Controls:MetroTabItem Header="if they are overflowing">
                <TextBlock FontSize="30" Text="3" />
            </Controls:MetroTabItem>
            <TabItem Header="instead of wrapping them">
                <TextBlock FontSize="30" Text="last of them" />
            </TabItem>
        </Controls:MetroAnimatedSingleRowTabControl> 
        <Button Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                            ToolTip="MaterialDesignFloatingActionMiniLightButton">
            <materialDesign:PackIcon Kind="Alarm" Height="24" Width="24" />
        </Button>-->
        <!--<ListView x:Name="AlarmItems1"
                            Margin="465,4,-123,0"
                              BorderThickness="1"
                              ItemsSource="{Binding AlarmItems1}"
                              SelectedIndex="0"
        Grid.Column="1"
              HorizontalAlignment="Stretch"
            
                              Style="{StaticResource VirtualisedMetroListView}" Controls:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True" ScrollViewer.CanContentScroll="True" MaxHeight="768" MaxWidth="1024">

            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding ID}" Header="ID" Width="80"/>
                    <GridViewColumn DisplayMemberBinding="{Binding POsition0}" Header="日期/时间"  Width="130"/>
                    <GridViewColumn DisplayMemberBinding="{Binding POsition1}" Header="信息" Width="300"/>
                    <GridViewColumn DisplayMemberBinding="{Binding POsition2}" Header="信息1" Width="300"/>
                </GridView>
            </ListView.View>
        </ListView>-->
        <!--<DataGrid ItemsSource="{Binding AlarmItems1}"
                  Grid.Row="0"
                  Grid.Column="1"
                   cal:Message.Attach="[Event CellEditEnding]=[Action calCellEditEnding($MySender,NULL)]"
                  AutoGenerateColumns="False">
            <DataGrid.Columns>
                <DataGridTextColumn Header="ID"
                                    Binding="{Binding ID}" />
                <Controls:DataGridNumericUpDownColumn Header="POsition0"
                                                      Binding="{Binding POsition0}"
                                                      StringFormat="C"
                                                      Minimum="0" >
                  
                </Controls:DataGridNumericUpDownColumn>
                
            </DataGrid.Columns>
            <i:Interaction.Triggers>
                -->
        <!--<i:EventTrigger EventName="CellEditEnding">
                    <i:InvokeCommandAction Command="{Binding Command10}"/>
                </i:EventTrigger>-->
        <!--<i:EventTrigger EventName="DropDownClosed">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownClosed}"/>
                                    </i:EventTrigger>-->
        <!--<i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxSelectionChanged}"/>
                                    </i:EventTrigger>-->
        <!--
            </i:Interaction.Triggers>
        </DataGrid>-->
        <!--<DataGrid Margin="0 8 0 0" ItemsSource="{Binding Items3}" CanUserSortColumns="True" CanUserAddRows="False" AutoGenerateColumns="False"
                          materialDesign:DataGridAssist.CellPadding="13 8 8 8" materialDesign:DataGridAssist.ColumnHeaderPadding="8">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Binding="{Binding IsSelected}" 
                                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        --><!--padding to allow hit test to pass thru for sorting --><!--
                        <Border Background="Transparent" Padding="6 0 6 0" HorizontalAlignment="Center">
                            <CheckBox HorizontalAlignment="Center"
                                              DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext}"
                                              IsChecked="{Binding IsAllItems3Selected}" />
                        </Border>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>
                <DataGridTextColumn Binding="{Binding Code}"
                                        Header="Code"
                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                --><!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn --><!--
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Name}"
                                                           Header="Name"
                                                           EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" 
                                                           />
                --><!-- set a max length to get an indicator in the editor --><!--
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Description}"
                                                           Header="Description"
                                                           MaxLength="255" 
                                                           EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"  />
                <materialDesign:MaterialDataGridTextColumn Binding="{Binding Numeric}"
                                                        Header="Number with long header"
                                                        Width="120"
                                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Right"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:MaterialDataGridTextColumn>

                --><!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo --><!--
                <materialDesign:MaterialDataGridComboBoxColumn Header="Food" 
                                                               SelectedValueBinding="{Binding Food}"
                                                               ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}">
                    --><!--Setting the editing element style allows access to all of the combo box's properties--><!--
                    <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                            <Setter Property="IsEditable" Value="True" />
                        </Style>
                    </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>

                </materialDesign:MaterialDataGridComboBoxColumn>
            </DataGrid.Columns>
        </DataGrid>
        <ScrollViewer Grid.Row="0" Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <ItemsControl ItemsSource="{Binding Swatches, Mode=OneTime}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </ScrollViewer>-->
        <!--<TextBox HorizontalAlignment="Left" Height="23" Margin="584,321,0,0" TextWrapping="Wrap"  Text="{Binding FH_U}" VerticalAlignment="Top" Width="120"/>
        <Button Content="FH_U" HorizontalAlignment="Left" Margin="95,92,0,0" VerticalAlignment="Top" Command="{Binding Command0}"
                CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Width="75" Grid.Column="0"/>
        <Button Content="Creat" HorizontalAlignment="Left" Margin="197,244,0,0" VerticalAlignment="Top" Command="{Binding Command7}"  Width="75" Grid.Column="0"/>
        <Button Content="Tab_U" HorizontalAlignment="Left" Margin="95,139,0,0" VerticalAlignment="Top" Command="{Binding Command1}" Width="75" Grid.Column="0"/>
        <Button Content="FH_V" HorizontalAlignment="Left" Margin="95,193,0,0" VerticalAlignment="Top" Command="{Binding Command2}" Width="75" Grid.Column="0"/>
        <Button Content="Tab_V" HorizontalAlignment="Left" Margin="95,244,0,0" VerticalAlignment="Top" Command="{Binding Command3}" Width="75" Grid.Column="0"/>
        <Button Content="FH_W" HorizontalAlignment="Left" Margin="197,92,0,0" VerticalAlignment="Top" Command="{Binding Command4}" Width="75" Grid.Column="0"/>
        <Button Content="Tab_W" HorizontalAlignment="Left" Margin="197,139,0,0" VerticalAlignment="Top" Command="{Binding Command5}" Width="75 " Grid.Column="0"/>
        <Button Content="JG" HorizontalAlignment="Left" Margin="197,193,0,0" VerticalAlignment="Top" Command="{Binding Command6}" Width="75" Grid.Column="0"/>
        <Button Content="Xml_Creat" HorizontalAlignment="Left" Margin="303,92,0,0" VerticalAlignment="Top" Command="{Binding Command8}" Width="75" Grid.Column="0"/>
        <Button Content="Xml_Read" HorizontalAlignment="Left" Margin="303,139,0,0" VerticalAlignment="Top" Command="{Binding Command9}" Width="75" Grid.Column="0"/>
        <Button Content="ted" HorizontalAlignment="Left" Margin="303,193,0,0" VerticalAlignment="Top" Command="{Binding _add}" Width="75" Grid.Column="0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding _Enable12}" Value="True">
                            <Setter Property="Background" Value="Red"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding _Enable12}" Value="False">
                            <Setter Property="Background" Value="Green"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="Xml_Read" HorizontalAlignment="Left" Margin="411,139,0,0" VerticalAlignment="Top" 
                Style="{StaticResource MaterialDesignFloatingActionLightButton}"
                Command="{Binding Command9}" Width="73" Grid.Column="0" Height="73">
          
        </Button>-->





    </Grid>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownOpened}"/>
        </i:EventTrigger>

    </i:Interaction.Triggers>
</UserControl>
