<UserControl x:Class="WpfApp1.Views.LogView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:iconpakges="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"  
             xmlns:WAP="clr-namespace:WpfApp1"
             xmlns:view1="clr-namespace:WpfApp1.ViewModels"
             d:DataContext="{d:DesignInstance WAP:MainWindowView}"
      mc:Ignorable="d" 
      d:DesignHeight="450" 
             d:DesignWidth="800"
     
     >
    <UserControl.DataContext>
        <view1:LogViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>

            <Style x:Key="CircleDropDownButton"
                       BasedOn="{StaticResource {x:Type Controls:DropDownButton}}"
                       TargetType="Controls:DropDownButton">
                <Setter Property="ArrowVisibility" Value="Collapsed" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}" />
                <Setter Property="FocusVisualStyle" Value="{DynamicResource MahApps.Metro.Styles.MetroCircleFocusVisual}" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Width" Value="48" />
            </Style>
            <Thickness x:Key="ColumnMargin">10 5 10 5</Thickness>
            <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Margin="0,4,0,-4">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" MinHeight="170"></RowDefinition>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" MinWidth="709"/>
            <ColumnDefinition Width="auto" MinWidth="502"/>
        </Grid.ColumnDefinitions>

        <Button  Grid.Column="0" 
                 Grid.Row="0" 
                 Command="{Binding Errorlog}"
                 IsEnabled="{Binding Authorization}" Content="Button"
                 HorizontalAlignment="Left" Margin="10,10,0,0" Width="75" Height="25"
                  VerticalAlignment="Top" RenderTransformOrigin="2.44,-2.92"
                ToolTip="123"    >

        </Button>





        <Controls:DropDownButton Name="DownButton11"
                                        
                                         Content="Debuglog"
                                                        
                                         Orientation="Vertical"
                                         DisplayMemberPath="Title"
                                             Margin="10,36,624,51" Grid.Row="1"
                                 ItemsSource="{Binding Errorlog1}"
                                         >
            <Controls:DropDownButton.Icon>
                <iconpakges:PackIconModern Margin="6" Kind="Journal" />
            </Controls:DropDownButton.Icon>
        </Controls:DropDownButton>
        <Controls:DropDownButton Name="DownButton12"
                                        
                                         Content="Debuglog"
                                                        
                                         Orientation="Vertical"
                                        
                                             Margin="109,36,525,51" Grid.Row="1"
                                 ItemsSource="{Binding AlarmItems}"
                                 DisplayMemberPath="ID"
                                         >
            <Controls:DropDownButton.Icon>
                <iconpakges:PackIconModern Margin="6" Kind="Journal" />
            </Controls:DropDownButton.Icon>
        </Controls:DropDownButton>
        <Controls:SplitButton Margin="229,36,383,51"
                              Grid.Row="1"
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding AlarmItems}"
                                  Orientation="Vertical"
                                  SelectedIndex="1">
            <Controls:SplitButton.Icon>
                <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
            </Controls:SplitButton.Icon>
        </Controls:SplitButton>
        <Controls:SplitButton Margin="362,36,249,51"
                              Grid.Row="1"
                              ToolTip="Debuglog" 
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding Logtexts}"
                                  Orientation="Vertical"
                                  SelectedIndex="1">
            <Controls:SplitButton.Icon>
                <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
            </Controls:SplitButton.Icon>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownOpened}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="DropDownClosed">
                    <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownClosed}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding RecipeCbxSelectionChanged}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </Controls:SplitButton>
        <!--cal:Message.Attach="[Event SelectionChanged]=[Action MyClick1($MySender,NULL)]"-->
        <StackPanel Grid.Row="0" Grid.Column="0">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto "></RowDefinition>
                    <RowDefinition Height="600"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Controls:SplitButton 
                              Grid.Column="0"
                              ToolTip="Debuglog"
                                Command="{Binding RecipeCbxSelectionChanged}"
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding Logtexts}"
                                  Orientation="Vertical"
                                  SelectedIndex="{Binding Index}">
                    <Controls:SplitButton.Icon>
                        <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
                    </Controls:SplitButton.Icon>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownOpened}"/>
                        </i:EventTrigger>
                        <!--<i:EventTrigger EventName="DropDownClosed">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownClosed}"/>
                                    </i:EventTrigger>-->
                        <!--<i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxSelectionChanged}"/>
                                    </i:EventTrigger>-->
                    </i:Interaction.Triggers>

                </Controls:SplitButton>
                <Controls:SplitButton
                              ToolTip="Errorlog" 
                    Grid.Column="1"
                                 Command="{Binding RecipeCbxSelectionChanged1}"
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding Logtexts_debug}"
                                  Orientation="Vertical"
                                  SelectedIndex="{Binding Index_debug}" >
                    <Controls:SplitButton.Icon >
                        <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
                    </Controls:SplitButton.Icon>
                </Controls:SplitButton>
                <Controls:SplitButton 
                              Grid.Column="2"
                              ToolTip="Runlog" 
                                 Command="{Binding RecipeCbxSelectionChanged2}"
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding Logtexts_run}"
                                  Orientation="Vertical"
                                  SelectedIndex="{Binding Index_run}" >
                    <Controls:SplitButton.Icon>
                        <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
                    </Controls:SplitButton.Icon>


                </Controls:SplitButton>
                <Controls:SplitButton 
                              Grid.Column="3"
                              ToolTip="Run_RealTime" 
                                 Command="{Binding RecipeCbxSelectionChanged3}"
                                  CommandParameter="{Binding
                                RelativeSource={RelativeSource Self},
                                    Path=SelectedItem.Name}"
                                  DisplayMemberPath="Name"
                                    ItemsSource="{Binding Logtexts_run}"
                                  Orientation="Vertical"
                                  SelectedIndex="{Binding Index_run}" >
                    <Controls:SplitButton.Icon>
                        <iconpakges:PackIconModern Margin="6" Kind="Book" RenderTransformOrigin="0.781,0.375" />
                    </Controls:SplitButton.Icon>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseRightButtonDown">
                            <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownOpened1}"/>
                        </i:EventTrigger>

                    </i:Interaction.Triggers>


                </Controls:SplitButton>
                <ScrollViewer Width="600" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4">

                    <!--<RichTextBox
                    Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                     Name="log_run"
                             Margin="0,0,0,0"
                             Padding="5"
                             Controls:TextBoxHelper.SelectAllOnFocus="True"
                             IsDocumentEnabled="True"
                             IsReadOnly="True"
                            cal:Message.Attach="[Event TextChanged]=[Action MyClick2($MySender,NULL)]"
                             SpellCheck.IsEnabled="True" HorizontalAlignment="Left"  mah:ScrollViewerHelper.IsHorizontalScrollWheelEnabled="True" MaxHeight="600">
                        <FlowDocument PageWidth="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RichTextBox}}, Path=ActualWidth}">
                            <Section Background="GhostWhite">
                                <Paragraph Margin="5,5,5,5">
                                    <Bold Foreground="Chocolate" FontSize="10 "/>
                                    <Run Text="{Binding Document}"/>
                                </Paragraph>
                                <BlockUIContainer>
                                   
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>

                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        
                           
                                    </Grid>

                                </BlockUIContainer>

                            </Section>
                        </FlowDocument>
                        <i:Interaction.Triggers>
                            -->
                    <!--<i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding Runlog}"/>
                        </i:EventTrigger>-->
                    <!--<i:EventTrigger EventName="DropDownClosed">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxDropDownClosed}"/>
                                    </i:EventTrigger>-->
                    <!--<i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding RecipeCbxSelectionChanged}"/>
                                    </i:EventTrigger>-->
                    <!--
                        </i:Interaction.Triggers>
                    </RichTextBox>-->
                    <RichTextBox
    MinWidth="280"
    AcceptsReturn="True"
    IsDocumentEnabled="True"
    IsReadOnly="{Binding IsChecked, ElementName=RichTextBoxIsReadOnlyCheckBox}"
    VerticalScrollBarVisibility="Auto"
    SpellCheck.IsEnabled="True"
    materialDesign:HintAssist.Hint="Multiline text"
    Margin="0,0,0,0"
     Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                        <FlowDocument>
                            <Paragraph>
                                <Run
          FontWeight="Bold">
                                    Rich Text Box.
                                </Run>
                                <LineBreak />
                                <Run
          FontStyle="Italic" Text="{Binding Document}" >

                                </Run>
                                <LineBreak />
                                <Hyperlink
          Cursor="Hand"
        
          NavigateUri="https://github.com/MaterialDesignInXAML/MaterialDesignInXamlToolkit">
                                    Material Design in XAML
                                </Hyperlink>
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                </ScrollViewer>
            </Grid>
        </StackPanel>
        <!--<TextBox HorizontalAlignment="Left" Height="23" Margin="10,186,0,0" TextWrapping="Wrap" Text="{Binding Index, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="120"/>
        <TextBlock HorizontalAlignment="Left" Margin="644,186,0,0" TextWrapping="Wrap" Text="{Binding Document, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Grid.ColumnSpan="2" Height="44" Width="135"/>
        <TextBox HorizontalAlignment="Left" Height="23" Margin="168,186,0,0" TextWrapping="Wrap" Text="{Binding Index_debug, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="120"/>
        <TextBox HorizontalAlignment="Left" Height="23" Margin="316,186,0,0" TextWrapping="Wrap" Text="{Binding Index_run, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="120"/>-->


    </Grid>
</UserControl>
